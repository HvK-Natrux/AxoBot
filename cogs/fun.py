import discord
from discord import app_commands
from discord.ext import commands
import random
import json
from config import COLORS
import asyncio
from datetime import datetime

class FunCommands(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @app_commands.command(name="8ball", description="Pose une question √† la boule magique")
    async def eight_ball(self, interaction: discord.Interaction, question: str):
        responses = [
            "C'est certain.", "Sans aucun doute.", "Oui, d√©finitivement.",
            "Probablement.", "Les signes disent que oui.", "C'est flou, r√©essayez.",
            "Demandez plus tard.", "Je ne peux pas pr√©dire maintenant.",
            "N'y comptez pas.", "Ma r√©ponse est non.", "Mes sources disent non.",
            "Les perspectives ne sont pas bonnes.", "Tr√®s douteux.", 
            "Les √©toiles ne sont pas align√©es.", "Concentrez-vous et demandez √† nouveau."
        ]
        await interaction.response.send_message(f"üé± Question: {question}\nR√©ponse: {random.choice(responses)}")

    @app_commands.command(name="choose", description="Fait un choix al√©atoire parmi les options donn√©es")
    async def choose(self, interaction: discord.Interaction, options: str):
        choices = [opt.strip() for opt in options.split(',')]
        if len(choices) < 2:
            await interaction.response.send_message("Veuillez fournir au moins 2 options s√©par√©es par des virgules.")
            return
        await interaction.response.send_message(f"Je choisis: **{random.choice(choices)}**")

    @app_commands.command(name="joke", description="Raconte une blague")
    async def joke(self, interaction: discord.Interaction):
        jokes = [
            "Pourquoi les plongeurs plongent-ils toujours en arri√®re ? Parce que sinon ils tombent dans le bateau !",
            "Qu'est-ce qu'un caf√© qui ne veut pas se faire boire ? Un caf√© qui s'√©chappe !",
            "Que fait un crocodile quand il rencontre une superbe femelle ? Il Lacoste !",
            "Pourquoi les poissons vivent dans l'eau sal√©e ? Parce que dans l'eau poivr√©e, ils √©ternueraient !",
            "Que fait une fraise sur un cheval ? Tagada Tagada !",
            "Quel est le comble pour un √©lectricien ? Ne pas √™tre au courant !",
            "Pourquoi les abeilles se marient toujours √† l'√©glise ? Parce qu'elles ont une reine !",
            "Que disent deux chiens qui se rencontrent ? Salut, √ßa col-leg ?",
            "Quel est le fruit pr√©f√©r√© des chats ? Le miaou-kiwi !",
            "Qu'est-ce qu'un hamster dans l'espace ? Un hamst√©ro√Øde !"
        ]
        await interaction.response.send_message(random.choice(jokes))

    @app_commands.command(name="meme", description="Affiche un meme al√©atoire")
    async def meme(self, interaction: discord.Interaction):
        memes = [
            "https://i.imgur.com/rZk0RVf.jpg",  # Cat meme
            "https://i.imgur.com/X1QIR6P.jpg",  # Dog meme
            "https://i.imgur.com/gXSvGah.jpg",  # Gaming meme
            "https://i.imgur.com/KZu7agF.jpg",  # Programming meme
            "https://i.imgur.com/lMKuqxP.jpg"   # Discord meme
        ]
        embed = discord.Embed(title="Meme du jour", color=COLORS['info'])
        embed.set_image(url=random.choice(memes))
        await interaction.response.send_message(embed=embed)

    @app_commands.command(name="cookie", description="Donne un cookie √† quelqu'un")
    async def cookie(self, interaction: discord.Interaction, member: discord.Member):
        cookie_types = ["üç™", "ü•†", "üçò"]
        cookie = random.choice(cookie_types)
        messages = [
            f"{interaction.user.name} offre un d√©licieux {cookie} √† {member.name} !",
            f"{member.name} re√ßoit un {cookie} tout chaud de {interaction.user.name} !",
            f"Un {cookie} magique appara√Æt devant {member.name}, gracieuset√© de {interaction.user.name} !"
        ]
        await interaction.response.send_message(random.choice(messages))

    @app_commands.command(name="hug", description="Fait un c√¢lin √† quelqu'un")
    async def hug(self, interaction: discord.Interaction, member: discord.Member):
        hug_emojis = ["ü§ó", "üíù", "üíñ", "üíï", "üíì"]
        messages = [
            f"{interaction.user.name} fait un gros c√¢lin √† {member.name} {random.choice(hug_emojis)}",
            f"{member.name} re√ßoit un c√¢lin chaleureux de {interaction.user.name} {random.choice(hug_emojis)}",
            f"*{interaction.user.name} envoie beaucoup d'amour √† {member.name}* {random.choice(hug_emojis)}"
        ]
        await interaction.response.send_message(random.choice(messages))

    @app_commands.command(name="say", description="Fait dire quelque chose au bot")
    @app_commands.default_permissions(manage_messages=True)
    async def say(self, interaction: discord.Interaction, message: str):
        await interaction.response.send_message(message)

    @app_commands.command(name="reverse", description="Inverse le texte donn√©")
    async def reverse(self, interaction: discord.Interaction, text: str):
        reversed_text = text[::-1]
        await interaction.response.send_message(f"üîÑ Texte invers√© : {reversed_text}")

    @app_commands.command(name="roll", description="Lance un ou plusieurs d√©s")
    async def roll(self, interaction: discord.Interaction, dice: str = "1d6"):
        try:
            number, sides = map(int, dice.lower().split('d'))
            if number < 1 or number > 100 or sides < 2 or sides > 100:
                await interaction.response.send_message("Format invalide. Utilisez par exemple: 1d6, 2d20, etc. (max 100 d√©s)")
                return

            results = [random.randint(1, sides) for _ in range(number)]
            total = sum(results)

            if number == 1:
                await interaction.response.send_message(f"üé≤ R√©sultat: {total}")
            else:
                await interaction.response.send_message(
                    f"üé≤ R√©sultats: {', '.join(map(str, results))}\nTotal: {total}"
                )
        except ValueError:
            await interaction.response.send_message("Format invalide. Utilisez par exemple: 1d6, 2d20, etc.")

    @app_commands.command(name="flip", description="Lance une pi√®ce")
    async def flip(self, interaction: discord.Interaction):
        result = random.choice(["Pile", "Face"])
        await interaction.response.send_message(f"ü™ô {result}!")

async def setup(bot):
    await bot.add_cog(FunCommands(bot))